// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/http/handlers/update-flat/handler.go

// Package mock_handlers is a generated GoMock package.
package mock_handlers

import (
	model "avito-backend-bootcamp/internal/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFlatService is a mock of FlatService interface.
type MockFlatService struct {
	ctrl     *gomock.Controller
	recorder *MockFlatServiceMockRecorder
}

// MockFlatServiceMockRecorder is the mock recorder for MockFlatService.
type MockFlatServiceMockRecorder struct {
	mock *MockFlatService
}

// NewMockFlatService creates a new mock instance.
func NewMockFlatService(ctrl *gomock.Controller) *MockFlatService {
	mock := &MockFlatService{ctrl: ctrl}
	mock.recorder = &MockFlatServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFlatService) EXPECT() *MockFlatServiceMockRecorder {
	return m.recorder
}

// UpdateFlat mocks base method.
func (m *MockFlatService) UpdateFlat(ctx context.Context, ID int64, status model.FlatStatus) (*model.Flat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateFlat", ctx, ID, status)
	ret0, _ := ret[0].(*model.Flat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateFlat indicates an expected call of UpdateFlat.
func (mr *MockFlatServiceMockRecorder) UpdateFlat(ctx, ID, status interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFlat", reflect.TypeOf((*MockFlatService)(nil).UpdateFlat), ctx, ID, status)
}
