// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/http/handlers/create-house/handler.go

// Package mock_handlers is a generated GoMock package.
package mock_handlers

import (
	model "avito-backend-bootcamp/internal/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHouseService is a mock of HouseService interface.
type MockHouseService struct {
	ctrl     *gomock.Controller
	recorder *MockHouseServiceMockRecorder
}

// MockHouseServiceMockRecorder is the mock recorder for MockHouseService.
type MockHouseServiceMockRecorder struct {
	mock *MockHouseService
}

// NewMockHouseService creates a new mock instance.
func NewMockHouseService(ctrl *gomock.Controller) *MockHouseService {
	mock := &MockHouseService{ctrl: ctrl}
	mock.recorder = &MockHouseServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHouseService) EXPECT() *MockHouseServiceMockRecorder {
	return m.recorder
}

// CreateHouse mocks base method.
func (m *MockHouseService) CreateHouse(ctx context.Context, address, developer string, year int64) (*model.House, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateHouse", ctx, address, developer, year)
	ret0, _ := ret[0].(*model.House)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateHouse indicates an expected call of CreateHouse.
func (mr *MockHouseServiceMockRecorder) CreateHouse(ctx, address, developer, year interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateHouse", reflect.TypeOf((*MockHouseService)(nil).CreateHouse), ctx, address, developer, year)
}
