// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/http/handlers/get-house/handler.go

// Package mock_handlers is a generated GoMock package.
package mock_handlers

import (
	model "avito-backend-bootcamp/internal/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFlatService is a mock of FlatService interface.
type MockFlatService struct {
	ctrl     *gomock.Controller
	recorder *MockFlatServiceMockRecorder
}

// MockFlatServiceMockRecorder is the mock recorder for MockFlatService.
type MockFlatServiceMockRecorder struct {
	mock *MockFlatService
}

// NewMockFlatService creates a new mock instance.
func NewMockFlatService(ctrl *gomock.Controller) *MockFlatService {
	mock := &MockFlatService{ctrl: ctrl}
	mock.recorder = &MockFlatServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFlatService) EXPECT() *MockFlatServiceMockRecorder {
	return m.recorder
}

// GetFlatListByHouseID mocks base method.
func (m *MockFlatService) GetFlatListByHouseID(ctx context.Context, houseID int64, userRole model.UserType) ([]*model.Flat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFlatListByHouseID", ctx, houseID, userRole)
	ret0, _ := ret[0].([]*model.Flat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFlatListByHouseID indicates an expected call of GetFlatListByHouseID.
func (mr *MockFlatServiceMockRecorder) GetFlatListByHouseID(ctx, houseID, userRole interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFlatListByHouseID", reflect.TypeOf((*MockFlatService)(nil).GetFlatListByHouseID), ctx, houseID, userRole)
}
